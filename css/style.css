/* X-axiis positive =>>>right
negative <<<=== left */
/* y-axis top to buttom down  positive
up negative*/
@keyframes moveInLeft {
  0% {
    opacity: 0;
    transform: translateX(-10rem); }
  80% {
    transform: translateX(1rem); }
  100% {
    opacity: 1;
    transform: translate(0); } }

@keyframes moveInRight {
  0% {
    opacity: 1;
    transform: translateX(10rem); }
  80% {
    transform: translateX(-1rem); }
  100% {
    opacity: 1;
    transform: translate(0); } }

@keyframes moveInButtom {
  0% {
    opacity: 0;
    transform: translateY(3rem); }
  100% {
    opacity: 1;
    transform: translate(0); } }

*,
*::after,
*::before {
  margin: 0;
  padding: 0;
  /* it change the box model, so that the borders
  and the padding are no longer added on the total height and weight
  we specify for the box.*/
  box-sizing: inherit; }

html {
  /* font-size: 10px; */
  /* default font size divide by font size we want i.e 10px so,
  10/16 is 0.625 which is 62.5%  */
  font-size: 62.5%;
  /* 1rem = 10px */ }

/* the body element will inherit to the child element */
body {
  box-sizing: border-box; }

/* the body element will inherit to the child element */
body {
  font-family: "Lato", sans-serif;
  font-weight: 400;
  /* font-size: 16px; */
  line-height: 1.7;
  color: #777;
  padding: 3rem; }

.heading-primary {
  color: #fff;
  text-transform: uppercase;
  /* to  hide back part shaking animation */
  backface-visibility: hidden;
  margin-bottom: 6rem; }
  .heading-primary--main {
    display: block;
    font-size: 6rem;
    font-weight: 400;
    letter-spacing: 3.5rem;
    animation-name: moveInLeft;
    animation-duration: 2s;
    animation-timing-function: ease-out;
    /* animation-iteration-count: 2; */
    /* animation-delay: 3s; */ }
  .heading-primary--sub {
    display: block;
    font-size: 2rem;
    font-weight: 700;
    letter-spacing: 1.75rem;
    animation: moveInRight 2s ease-out;
    /* animation-name: moveInright;
  animation-duration: 1s; */ }

.btn {
  /*  when we click the button  */ }
  .btn:link, .btn:visited {
    text-transform: uppercase;
    text-decoration: none;
    padding: 1.5rem 4rem;
    display: inline-block;
    border-radius: 10rem;
    transition: all 0.2s;
    /* to move the transform */
    /* refrence to the absolute position  */
    position: relative;
    font-size: 1.6rem; }
  .btn--white {
    background-color: #fff;
    color: #777; }
    .btn--white::after {
      background-color: #fff; }
  .btn:hover {
    transform: translateY(-0.3rem);
    box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2);
    /* box-shadow: x-axix yaxix blur color of shadow */ }
    .btn:hover::after {
      /* to element to grow and fade out */
      /* scale will increase the element */
      transform: scaleX(1.5) scaleY(1.6);
      /* to make invisible */
      opacity: 0; }
  .btn:active {
    transform: translateY(-1px);
    box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.2); }
  .btn::after {
    /* for the after affect we should specify centent property and display for the after
   effect  */
    content: "";
    display: inline-block;
    height: 100%;
    width: 100%;
    border-radius: 100px;
    /* put after effect behind actual effect  */
    position: absolute;
    top: 0;
    left: 0;
    /* define the position of the element  
  if they are one on top of another*/
    z-index: -1;
    /* animitated on intial state*/
    transition: all 0.4s; }
  .btn--animated {
    animation: moveInButtom 0.5s ease-out 0.75s;
    /*  it will apply 0% effect before the animation start */
    animation-fill-mode: backwards; }

.row {
  max-width: 114rem;
  background-color: #eee;
  color: white;
  margin: 0 auto; }
  .row:not(:last-child) {
    margin-bottom: 8rem; }
  .row [class^="col"] {
    background-color: orangered;
    float: left; }
    .row [class^="col"]:not(:last-child) {
      margin-right: 6rem; }
  .row::after {
    content: "";
    display: table;
    clear: both; }
  .row .col-1-of-2 {
    width: calc((100% - 6rem) / 2); }
  .row .col-1-of-3 {
    width: calc((100% - 2 * 6rem) / 3); }
  .row .col-2-of-3 {
    width: calc( ((100% - 2 * 6rem) / 3) * 2 + 6rem); }
  .row .col-1-of-4 {
    width: calc((100% - 3 * 6rem) / 4); }
  .row .col-2-of-4 {
    width: calc( ((100% - 3 * 6rem) / 4) * 2 + 6rem); }
  .row .col-3-of-4 {
    width: calc( ((100% - 3 * 6rem) / 4) * 3 + 2 * 6rem); }

.header {
  /* it will cover the 95% height of the viewpoint
   */
  height: 95vh;
  /* one folder back to the project folder and to the img folder */
  background-image: linear-gradient(to right bottom, #7ed56f, #28b485), url(../img/hero.jpg);
  /*  cover does is that whatever the width of the viewport,
  or the element it always try to fit the element inside the box*/
  background-size: cover;
  /* the img always remain in top of the container*/
  background-position: top;
  position: relative;
  /* clip-path: polygon(x y, x y, x y,x y); */
  /* clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%); */
  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
  /* clip-path: polygon(50% 0, 100% 100%, 0 100%); */
  /* we use the animation in all the page */
  /* .logo:hover {
  animation: moveInRight 1s ease-out;
} */ }
  .header__logo-box {
    position: absolute;
    top: 4.8rem;
    left: 4rem; }
  .header__logo {
    height: 3.5rem; }
  .header__text-box {
    position: absolute;
    top: 40%;
    left: 50%;
    /* to align center translate relate with element itself not with the parent*/
    transform: translate(-50%, -50%);
    text-align: center; }
